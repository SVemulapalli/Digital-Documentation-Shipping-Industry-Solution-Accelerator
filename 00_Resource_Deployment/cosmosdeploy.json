{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "String"
        },
        "cmsLocation": {
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-03-01",
            "name": "[parameters('resourceName')]",
            "location": "[parameters('cmsLocation')]",
            "tags": {
                "defaultExperience": "Azure Cosmos DB for MongoDB API",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Non-Production"
            },
            "kind": "MongoDB",
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[parameters('cmsLocation')]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "capabilities": [
                    {
                        "name": "EnableMongo"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/CargoTokenRepository')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "CargoTokenRepository"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/Management')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "Management"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/Management/blockchainnetwork')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'Management')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "blockchainnetwork",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            },
                            "options": {}
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/CargoTokenRepository/cargotokenshipment')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'CargoTokenRepository')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "cargotokenshipment",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            },
                            "options": {}
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/Management/party')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'Management')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "party",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            },
                            "options": {}
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/Management/user')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'Management')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "user",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "_id"
                                ]
                            },
                            "options": {}
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/CargoTokenRepository/cargotokenshipment/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections', parameters('resourceName'), 'CargoTokenRepository', 'cargotokenshipment')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'CargoTokenRepository')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/Management/blockchainnetwork/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections', parameters('resourceName'), 'Management', 'blockchainnetwork')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'Management')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/Management/party/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections', parameters('resourceName'), 'Management', 'party')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'Management')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('resourceName'), '/Management/user/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections', parameters('resourceName'), 'Management', 'user')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('resourceName'), 'Management')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('resourceName'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        }
    ]
}